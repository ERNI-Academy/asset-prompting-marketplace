name: Issue to PR Automation

on:
  issues:
    types: [opened]
  labels:
      - 'prompt'

jobs:
  create_pr:
    if: contains( toJson( github.event.issue.labels ), '"prompt"' )
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Git Config
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Extract Issue Data
        id: extract_data
        run: |
          echo "Extracting data from issue body"

          # Set PROMPT_NAME to the issue title
          prompt_name="${{ github.event.issue.title }}"
          echo "PROMPT_NAME=$prompt_name" >> $GITHUB_ENV

          # Extract author
          author="$(echo "${{ github.event.issue.body }}" | awk '/^### Author$/,/^###/{if ($0 !~ /^###/ && $0 != "") print}' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')"
          echo "AUTHOR=$author" >> $GITHUB_ENV

          # Extract tags
          tags="$(echo "${{ github.event.issue.body }}" | awk '/^### Tags$/,/^###/{if ($0 !~ /^###/ && $0 != "") print}' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')"
          echo "TAGS=$tags" >> $GITHUB_ENV

          # Extract prompt content
          prompt_content="$(echo "${{ github.event.issue.body }}" | awk '/^### Prompt$/,/^###/{if ($0 !~ /^###/ && $0 != "") print}' )"
          echo "PROMPT_CONTENT<<EOF" >> $GITHUB_ENV
          echo "$prompt_content" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Branch
        id: branch_name
        run: |
          BRANCH_NAME="issue-${{ github.event.issue.number }}"
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
          git checkout -b "$BRANCH_NAME"

      - name: Debug Extracted Data
        run: |
          echo "Prompt Name: ${{ env.PROMPT_NAME }}"
          echo "Author: ${{ env.AUTHOR }}"
          echo "Tags: ${{ env.TAGS }}"
          echo "Prompt Content:"
          echo "${{ env.PROMPT_CONTENT }}"

      - name: Create File from Issue
        run: |
          # Sanitize prompt name to create a valid file name
          FILE_NAME="$(echo "${{ env.PROMPT_NAME }}" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]+/-/g; s/^-+|-+$//g')"
          FILE_PATH="aida-prompts/_prompts/${FILE_NAME}.md"

          echo "Creating file at $FILE_PATH"

          mkdir -p "$(dirname "$FILE_PATH")"

          cat > "$FILE_PATH" <<EOF
---
title: "${{ env.PROMPT_NAME }}"
author: "${{ env.AUTHOR }}"
tags: [${{ env.TAGS }}]
---

${{ env.PROMPT_CONTENT }}
EOF

          git add "$FILE_PATH"
          git commit -m "Add prompt '${{ env.PROMPT_NAME }}' from Issue #${{ github.event.issue.number }}"

      - name: Push Branch
        run: |
          git push origin HEAD

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.branch_name.outputs.branch }}
          base: main
          title: "Add Prompt: ${{ env.PROMPT_NAME }}"
          body: |
            Adds a new prompt from Issue #${{ github.event.issue.number }}.
            Automatically generated by GitHub Actions.
          body: |
            Adds a new prompt from Issue #${{ github.event.issue.number }}.
            Automatically generated by GitHub Actions.
